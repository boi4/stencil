
o1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <_init>:
sub    rsp,0x8
mov    rax,QWORD PTR [rip+0x2fe5]        # 403ff0 <__gmon_start__>
test   rax,rax
je     401012 <_init+0x12>
call   rax
add    rsp,0x8
ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
push   QWORD PTR [rip+0x2f5a]        # 403f80 <_GLOBAL_OFFSET_TABLE_+0x8>
jmp    QWORD PTR [rip+0x2f5c]        # 403f88 <_GLOBAL_OFFSET_TABLE_+0x10>
nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
jmp    QWORD PTR [rip+0x2f5a]        # 403f90 <free@GLIBC_2.2.5>
push   0x0
jmp    401020 <.plt>

0000000000401040 <fclose@plt>:
jmp    QWORD PTR [rip+0x2f52]        # 403f98 <fclose@GLIBC_2.2.5>
push   0x1
jmp    401020 <.plt>

0000000000401050 <__stack_chk_fail@plt>:
jmp    QWORD PTR [rip+0x2f4a]        # 403fa0 <__stack_chk_fail@GLIBC_2.4>
push   0x2
jmp    401020 <.plt>

0000000000401060 <gettimeofday@plt>:
jmp    QWORD PTR [rip+0x2f42]        # 403fa8 <gettimeofday@GLIBC_2.2.5>
push   0x3
jmp    401020 <.plt>

0000000000401070 <fputc@plt>:
jmp    QWORD PTR [rip+0x2f3a]        # 403fb0 <fputc@GLIBC_2.2.5>
push   0x4
jmp    401020 <.plt>

0000000000401080 <strtol@plt>:
jmp    QWORD PTR [rip+0x2f32]        # 403fb8 <strtol@GLIBC_2.2.5>
push   0x5
jmp    401020 <.plt>

0000000000401090 <malloc@plt>:
jmp    QWORD PTR [rip+0x2f2a]        # 403fc0 <malloc@GLIBC_2.2.5>
push   0x6
jmp    401020 <.plt>

00000000004010a0 <__printf_chk@plt>:
jmp    QWORD PTR [rip+0x2f22]        # 403fc8 <__printf_chk@GLIBC_2.3.4>
push   0x7
jmp    401020 <.plt>

00000000004010b0 <fopen@plt>:
jmp    QWORD PTR [rip+0x2f1a]        # 403fd0 <fopen@GLIBC_2.2.5>
push   0x8
jmp    401020 <.plt>

00000000004010c0 <exit@plt>:
jmp    QWORD PTR [rip+0x2f12]        # 403fd8 <exit@GLIBC_2.2.5>
push   0x9
jmp    401020 <.plt>

00000000004010d0 <__fprintf_chk@plt>:
jmp    QWORD PTR [rip+0x2f0a]        # 403fe0 <__fprintf_chk@GLIBC_2.3.4>
push   0xa
jmp    401020 <.plt>

Disassembly of section .text:

00000000004010e0 <_start>:
xor    ebp,ebp
mov    r9,rdx
pop    rsi
mov    rdx,rsp
and    rsp,0xfffffffffffffff0
push   rax
push   rsp
mov    r8,0x401800
mov    rcx,0x401790
mov    rdi,0x4015bb
call   QWORD PTR [rip+0x2ede]        # 403fe8 <__libc_start_main@GLIBC_2.2.5>
hlt    
nop    DWORD PTR [rax+rax*1+0x0]

0000000000401110 <deregister_tm_clones>:
mov    eax,0x404010
cmp    rax,0x404010
je     401130 <deregister_tm_clones+0x20>
mov    eax,0x0
test   rax,rax
je     401130 <deregister_tm_clones+0x20>
mov    edi,0x404010
jmp    rax
xchg   ax,ax
ret    
data16 nop WORD PTR cs:[rax+rax*1+0x0]
nop    DWORD PTR [rax+0x0]

0000000000401140 <register_tm_clones>:
mov    esi,0x404010
sub    rsi,0x404010
mov    rax,rsi
shr    rsi,0x3f
sar    rax,0x3
add    rsi,rax
sar    rsi,1
je     401170 <register_tm_clones+0x30>
mov    eax,0x0
test   rax,rax
je     401170 <register_tm_clones+0x30>
mov    edi,0x404010
jmp    rax
ret    
data16 nop WORD PTR cs:[rax+rax*1+0x0]
nop    DWORD PTR [rax+0x0]

0000000000401180 <__do_global_dtors_aux>:
cmp    BYTE PTR [rip+0x2e89],0x0        # 404010 <__TMC_END__>
jne    4011a0 <__do_global_dtors_aux+0x20>
push   rbp
mov    rbp,rsp
call   401110 <deregister_tm_clones>
mov    BYTE PTR [rip+0x2e77],0x1        # 404010 <__TMC_END__>
pop    rbp
ret    
nop    DWORD PTR [rax+rax*1+0x0]
ret    
data16 nop WORD PTR cs:[rax+rax*1+0x0]
nop    DWORD PTR [rax+0x0]

00000000004011b0 <frame_dummy>:
jmp    401140 <register_tm_clones>

00000000004011b2 <stencil>:
lea    eax,[rsi+0x1]
cmp    eax,0x1
jle    4012b2 <stencil+0x100>
push   r12
push   rbp
push   rbx
mov    ebp,ecx
mov    r10d,ecx
lea    r12d,[rsi+rcx*1]
add    edi,0x1
movsd  xmm4,QWORD PTR [rip+0xeba]        # 402090 <_IO_stdin_used+0x90>
movsd  xmm2,QWORD PTR [rip+0xeba]        # 402098 <_IO_stdin_used+0x98>
mov    r11d,0x1
sub    r11d,ecx
movsd  xmm3,QWORD PTR [rip+0xeb1]        # 4020a0 <_IO_stdin_used+0xa0>
lea    ebx,[rcx+0x1]
jmp    40129b <stencil+0xe9>
lea    ecx,[rax+0x1]
movsxd rcx,ecx
lea    rdx,[r9+rcx*8]
movapd xmm1,xmm4
mulsd  xmm1,QWORD PTR [r8+rcx*8]
movapd xmm0,xmm1
divsd  xmm0,xmm2
movsd  QWORD PTR [rdx],xmm0
lea    ecx,[r11+rax*1]
movsxd rcx,ecx
movapd xmm1,xmm3
mulsd  xmm1,QWORD PTR [r8+rcx*8]
divsd  xmm1,xmm2
addsd  xmm1,xmm0
movsd  QWORD PTR [rdx],xmm1
add    esi,0x1
lea    ecx,[rbx+rax*1]
movsxd rcx,ecx
movapd xmm0,xmm3
mulsd  xmm0,QWORD PTR [r8+rcx*8]
divsd  xmm0,xmm2
addsd  xmm1,xmm0
movsd  QWORD PTR [rdx],xmm1
movsxd rcx,eax
movapd xmm0,xmm3
mulsd  xmm0,QWORD PTR [r8+rcx*8]
divsd  xmm0,xmm2
addsd  xmm0,xmm1
movsd  QWORD PTR [rdx],xmm0
lea    ecx,[rax+0x2]
movsxd rcx,ecx
movapd xmm1,xmm3
mulsd  xmm1,QWORD PTR [r8+rcx*8]
divsd  xmm1,xmm2
addsd  xmm0,xmm1
movsd  QWORD PTR [rdx],xmm0
add    eax,r10d
cmp    esi,edi
jne    4011f7 <stencil+0x45>
add    ebp,0x1
cmp    ebp,r12d
je     4012ad <stencil+0xfb>
mov    eax,ebp
mov    esi,0x1
cmp    edi,0x1
jg     4011f7 <stencil+0x45>
jmp    401293 <stencil+0xe1>
pop    rbx
pop    rbp
pop    r12
ret    
ret    

00000000004012b3 <init_image>:
push   r15
push   r14
push   r13
push   r12
push   rbp
push   rbx
mov    ebp,edi
mov    r15d,esi
mov    DWORD PTR [rsp-0x4],ecx
mov    rdi,r8
lea    eax,[rsi+0x2]
test   eax,eax
jle    401318 <init_image+0x65>
mov    r8,r9
mov    r11d,eax
mov    r10d,0x0
lea    esi,[rbp+0x2]
mov    r9d,ecx
jmp    40130a <init_image+0x57>
movsxd rcx,edx
mov    QWORD PTR [rdi+rcx*8],0x0
mov    QWORD PTR [r8+rcx*8],0x0
add    eax,0x1
add    edx,r9d
cmp    eax,esi
jne    4012e4 <init_image+0x31>
add    r10d,0x1
cmp    r10d,r11d
je     401318 <init_image+0x65>
mov    edx,r10d
mov    eax,0x0
test   esi,esi
jg     4012e4 <init_image+0x31>
jmp    401301 <init_image+0x4e>
test   r15d,r15d
jle    4013f8 <init_image+0x145>
mov    r8d,DWORD PTR [rsp-0x4]
mov    r13d,r8d
shl    r13d,0x6
mov    DWORD PTR [rsp-0xc],0x1
mov    r14d,0x40
mov    DWORD PTR [rsp-0x10],0x0
movsd  xmm0,QWORD PTR [rip+0xd5d]        # 4020a8 <_IO_stdin_used+0xa8>
jmp    4013d8 <init_image+0x125>
add    r10d,0x1
cmp    ebx,r10d
je     401378 <init_image+0xc5>
mov    eax,r9d
cmp    r9d,esi
jge    401350 <init_image+0x9d>
mov    edx,r10d
movsxd rcx,edx
movsd  QWORD PTR [rdi+rcx*8],xmm0
add    eax,0x1
add    edx,r8d
cmp    esi,eax
jne    401364 <init_image+0xb1>
jmp    401350 <init_image+0x9d>
lea    eax,[r9+0x40]
add    r11d,r13d
add    r9d,0x3f
cmp    ebp,r9d
jle    4013c1 <init_image+0x10e>
mov    r9d,eax
lea    eax,[r12+r9*1]
test   al,0x7f
je     401378 <init_image+0xc5>
cmp    r14d,r15d
mov    edx,r15d
cmovle edx,r14d
lea    eax,[r9+0x3f]
cmp    eax,ebp
cmovg  eax,ebp
lea    ecx,[rdx+0x1]
cmp    DWORD PTR [rsp-0xc],ecx
jge    401378 <init_image+0xc5>
mov    ebx,DWORD PTR [rsp-0x8]
lea    r10d,[rbx+r11*1]
lea    ebx,[rdx+r11*1+0x1]
lea    esi,[rax+0x1]
jmp    401359 <init_image+0xa6>
add    DWORD PTR [rsp-0x10],0x40
mov    eax,DWORD PTR [rsp-0x10]
add    r14d,0x40
add    DWORD PTR [rsp-0xc],0x40
cmp    r15d,eax
jle    4013f8 <init_image+0x145>
mov    r11d,DWORD PTR [rsp-0x4]
mov    r9d,0x1
mov    eax,DWORD PTR [rsp-0x10]
lea    r12d,[rax-0x1]
add    eax,0x1
mov    DWORD PTR [rsp-0x8],eax
test   ebp,ebp
jg     40138b <init_image+0xd8>
jmp    4013c1 <init_image+0x10e>
pop    rbx
pop    rbp
pop    r12
pop    r13
pop    r14
pop    r15
ret    

0000000000401403 <output_image>:
push   r15
push   r14
push   r13
push   r12
push   rbp
push   rbx
sub    rsp,0x28
mov    DWORD PTR [rsp+0x1c],esi
mov    ebx,edx
mov    r12d,r8d
mov    r13,r9
lea    rsi,[rip+0xbe0]        # 402004 <_IO_stdin_used+0x4>
call   4010b0 <fopen@plt>
test   rax,rax
je     401482 <output_image+0x7f>
mov    r15,rax
mov    r8d,ebx
mov    ecx,DWORD PTR [rsp+0x1c]
lea    rdx,[rip+0xbed]        # 40202c <_IO_stdin_used+0x2c>
mov    esi,0x1
mov    rdi,rax
mov    eax,0x0
call   4010d0 <__fprintf_chk@plt>
lea    eax,[rbx+0x1]
cmp    eax,0x1
jle    40154b <output_image+0x148>
lea    eax,[r12+0x1]
mov    DWORD PTR [rsp+0x14],eax
add    ebx,eax
mov    DWORD PTR [rsp+0x18],ebx
mov    esi,eax
pxor   xmm3,xmm3
movsd  QWORD PTR [rsp+0x8],xmm3
mov    eax,DWORD PTR [rsp+0x1c]
lea    r14d,[rax+0x1]
jmp    4014bc <output_image+0xb9>
lea    rcx,[rip+0xb7d]        # 402006 <_IO_stdin_used+0x6>
lea    rdx,[rip+0xb82]        # 402012 <_IO_stdin_used+0x12>
mov    esi,0x1
mov    rax,QWORD PTR [rip+0x2b5c]        # 403ff8 <stderr@GLIBC_2.2.5>
mov    rdi,QWORD PTR [rax]
mov    eax,0x0
call   4010d0 <__fprintf_chk@plt>
mov    edi,0x1
call   4010c0 <exit@plt>
add    esi,0x1
cmp    esi,DWORD PTR [rsp+0x18]
je     40152f <output_image+0x12c>
mov    edx,esi
mov    eax,0x1
cmp    r14d,0x1
jle    4014b3 <output_image+0xb0>
movsxd rcx,edx
movsd  xmm0,QWORD PTR [r13+rcx*8+0x0]
maxsd  xmm0,QWORD PTR [rsp+0x8]
movsd  QWORD PTR [rsp+0x8],xmm0
add    eax,0x1
add    edx,r12d
cmp    eax,r14d
jne    4014c9 <output_image+0xc6>
jmp    4014b3 <output_image+0xb0>
movsxd rax,ebp
movsd  xmm0,QWORD PTR [r13+rax*8+0x0]
mulsd  xmm0,QWORD PTR [rip+0xbb2]        # 4020b0 <_IO_stdin_used+0xb0>
divsd  xmm0,QWORD PTR [rsp+0x8]
cvttsd2si edi,xmm0
movsx  edi,dil
mov    rsi,r15
call   401070 <fputc@plt>
add    ebx,0x1
add    ebp,r12d
cmp    ebx,DWORD PTR [rsp+0x10]
jne    4014ec <output_image+0xe9>
add    DWORD PTR [rsp+0x14],0x1
mov    eax,DWORD PTR [rsp+0x14]
cmp    eax,DWORD PTR [rsp+0x18]
je     40154b <output_image+0x148>
mov    eax,DWORD PTR [rsp+0x1c]
add    eax,0x1
mov    DWORD PTR [rsp+0x10],eax
mov    ebp,DWORD PTR [rsp+0x14]
mov    ebx,0x1
cmp    r14d,0x1
jg     4014ec <output_image+0xe9>
jmp    401520 <output_image+0x11d>
mov    rdi,r15
call   401040 <fclose@plt>
add    rsp,0x28
pop    rbx
pop    rbp
pop    r12
pop    r13
pop    r14
pop    r15
ret    

0000000000401562 <wtime>:
push   rbx
sub    rsp,0x20
mov    ebx,0x28
mov    rax,QWORD PTR fs:[rbx]
mov    QWORD PTR [rsp+0x18],rax
xor    eax,eax
mov    rdi,rsp
mov    esi,0x0
call   401060 <gettimeofday@plt>
pxor   xmm0,xmm0
cvtsi2sd xmm0,QWORD PTR [rsp+0x8]
mulsd  xmm0,QWORD PTR [rip+0xb21]        # 4020b8 <_IO_stdin_used+0xb8>
pxor   xmm1,xmm1
cvtsi2sd xmm1,QWORD PTR [rsp]
addsd  xmm0,xmm1
mov    rax,QWORD PTR [rsp+0x18]
xor    rax,QWORD PTR fs:[rbx]
jne    4015b6 <wtime+0x54>
add    rsp,0x20
pop    rbx
ret    
call   401050 <__stack_chk_fail@plt>

00000000004015bb <main>:
push   r15
push   r14
push   r13
push   r12
push   rbp
push   rbx
sub    rsp,0x38
mov    rbx,rsi
cmp    edi,0x4
jne    401758 <main+0x19d>
mov    rdi,QWORD PTR [rsi+0x8]
mov    edx,0xa
mov    esi,0x0
call   401080 <strtol@plt>
mov    rbp,rax
mov    r15d,eax
mov    rdi,QWORD PTR [rbx+0x10]
mov    edx,0xa
mov    esi,0x0
call   401080 <strtol@plt>
mov    r14,rax
mov    DWORD PTR [rsp],eax
mov    rdi,QWORD PTR [rbx+0x18]
mov    edx,0xa
mov    esi,0x0
call   401080 <strtol@plt>
mov    QWORD PTR [rsp+0x28],rax
mov    DWORD PTR [rsp+0xc],eax
mov    QWORD PTR [rsp+0x18],rbp
lea    r13d,[rbp+0x2]
mov    QWORD PTR [rsp+0x10],r14
lea    r14d,[r14+0x2]
movsxd rbx,r13d
movsxd rax,r14d
imul   rbx,rax
shl    rbx,0x3
mov    rdi,rbx
call   401090 <malloc@plt>
mov    rbp,rax
mov    rdi,rbx
call   401090 <malloc@plt>
mov    r12,rax
mov    r9,rax
mov    r8,rbp
mov    ecx,r14d
mov    edx,r13d
mov    esi,DWORD PTR [rsp+0x10]
mov    edi,DWORD PTR [rsp+0x18]
call   4012b3 <init_image>
call   401562 <wtime>
movsd  QWORD PTR [rsp+0x20],xmm0
cmp    DWORD PTR [rsp+0x28],0x0
jle    4016c0 <main+0x105>
mov    ebx,0x0
mov    r9,r12
mov    r8,rbp
mov    ecx,r14d
mov    edx,r13d
mov    esi,DWORD PTR [rsp]
mov    edi,r15d
call   4011b2 <stencil>
mov    r9,rbp
mov    r8,r12
mov    ecx,r14d
mov    edx,r13d
mov    esi,DWORD PTR [rsp]
mov    edi,r15d
call   4011b2 <stencil>
add    ebx,0x1
cmp    ebx,DWORD PTR [rsp+0xc]
jne    401689 <main+0xce>
call   401562 <wtime>
movsd  QWORD PTR [rsp],xmm0
lea    rsi,[rip+0x997]        # 402068 <_IO_stdin_used+0x68>
mov    edi,0x1
mov    eax,0x0
call   4010a0 <__printf_chk@plt>
movsd  xmm0,QWORD PTR [rsp]
subsd  xmm0,QWORD PTR [rsp+0x20]
lea    rsi,[rip+0x960]        # 402052 <_IO_stdin_used+0x52>
mov    edi,0x1
mov    eax,0x1
call   4010a0 <__printf_chk@plt>
lea    rsi,[rip+0x960]        # 402068 <_IO_stdin_used+0x68>
mov    edi,0x1
mov    eax,0x0
call   4010a0 <__printf_chk@plt>
mov    r9,rbp
mov    r8d,r14d
mov    ecx,r13d
mov    edx,DWORD PTR [rsp+0x10]
mov    esi,DWORD PTR [rsp+0x18]
lea    rdi,[rip+0x8d7]        # 402006 <_IO_stdin_used+0x6>
call   401403 <output_image>
mov    rdi,rbp
call   401030 <free@plt>
mov    rdi,r12
call   401030 <free@plt>
mov    eax,0x0
add    rsp,0x38
pop    rbx
pop    rbp
pop    r12
pop    r13
pop    r14
pop    r15
ret    
mov    rcx,QWORD PTR [rsi]
lea    rdx,[rip+0x8d8]        # 40203a <_IO_stdin_used+0x3a>
mov    esi,0x1
mov    rax,QWORD PTR [rip+0x288a]        # 403ff8 <stderr@GLIBC_2.2.5>
mov    rdi,QWORD PTR [rax]
mov    eax,0x0
call   4010d0 <__fprintf_chk@plt>
mov    edi,0x1
call   4010c0 <exit@plt>
nop    WORD PTR cs:[rax+rax*1+0x0]
nop

0000000000401790 <__libc_csu_init>:
push   r15
push   r14
mov    r15d,edi
push   r13
push   r12
lea    r12,[rip+0x25b6]        # 403d58 <__frame_dummy_init_array_entry>
push   rbp
lea    rbp,[rip+0x25b6]        # 403d60 <__init_array_end>
push   rbx
mov    r14,rsi
mov    r13,rdx
sub    rbp,r12
sub    rsp,0x8
sar    rbp,0x3
call   401000 <_init>
test   rbp,rbp
je     4017e6 <__libc_csu_init+0x56>
xor    ebx,ebx
nop    DWORD PTR [rax+rax*1+0x0]
mov    rdx,r13
mov    rsi,r14
mov    edi,r15d
call   QWORD PTR [r12+rbx*8]
add    rbx,0x1
cmp    rbx,rbp
jne    4017d0 <__libc_csu_init+0x40>
add    rsp,0x8
pop    rbx
pop    rbp
pop    r12
pop    r13
pop    r14
pop    r15
ret    
data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401800 <__libc_csu_fini>:
repz ret 

Disassembly of section .fini:

0000000000401804 <_fini>:
sub    rsp,0x8
add    rsp,0x8
ret    
